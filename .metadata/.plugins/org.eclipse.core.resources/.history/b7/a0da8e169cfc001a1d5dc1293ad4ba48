package com.wellsfargo.fsd.cms.controller;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.wellsfargo.fsd.cms.entity.Contact;
import com.wellsfargo.fsd.cms.exception.ContactException;
import com.wellsfargo.fsd.cms.service.ContactService;

@Controller
@RequestMapping("/user")
public class ContactUserController {

	@Autowired
	private ContactService contactService;
	
	@GetMapping("/list")
	public ModelAndView showContactsList() throws ContactException {
		return new ModelAndView("contactsPage","contacts",contactService.getAllContacts());
	}
	
	@ModelAttribute("allGroups")
	public List<String> getGroups(){
		return Arrays.asList(new String[] {"Family","Work","Gym","Metro","Helpers"});
	}
	
	@GetMapping("/searchContacts")
	public String showSearchOptions() {
		return "searchContacts";
	}
	
	@GetMapping("/searchbyMobile")
	public ModelAndView searchbyMobile(@RequestParam("mobile") String mobile) throws ContactException {
		List<Contact> contacts = new ArrayList<Contact>();
		if(mobile==null || contactService.findByMobile(mobile) == null) {
			return new ModelAndView("searchContacts","msg", "No records found for your search criteria!");
		}else {
			contacts.add(contactService.findByMobile(mobile));
			return new ModelAndView("searchContacts","contacts", contacts);
		}
	}
	
	@GetMapping("/searchbyGroup")
	public ModelAndView searchbyGroup(@RequestParam("grp") String group) throws ContactException {
		if(group==null || contactService.findAllByGroup(group).isEmpty()) {
			return new ModelAndView("searchContacts","msg", "No records found for your search criteria!");
		}else {
			List<Contact> contacts = contactService.findAllByGroup(group);
			return new ModelAndView("searchContacts","contacts", contacts);
		}
	}
	
	@GetMapping("/searchbyDobRange")
	public ModelAndView searchbyDOBRange(@DateTimeFormat(iso=ISO.DATE) @RequestParam("start") LocalDate start, @DateTimeFormat(iso=ISO.DATE) @RequestParam("end") LocalDate end) throws ContactException {
		if(end==null && start != null) {
			end = LocalDate.now();
		}
		if(start==null || end==null || contactService.findAllBornInRange(start, end).isEmpty()) {
			return new ModelAndView("searchContacts","msg", "No records found for your search criteria!");
		}else {
			List<Contact> contacts = contactService.findAllBornInRange(start, end);
			return new ModelAndView("searchContacts","contacts", contacts);
		}
	}
}